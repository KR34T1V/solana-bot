// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  strategies Strategy[]
}

model Strategy {
  id             String   @id @default(cuid())
  name           String
  type           String
  config         String
  currentVersion Int      @default(1)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  user     User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  versions StrategyVersion[]
  backtests Backtest[]

  @@index([userId])
}

model StrategyVersion {
  id        String   @id @default(cuid())
  version   Int
  name      String
  type      String
  config    String
  changes   String
  createdAt DateTime @default(now())

  // Performance metrics
  performance String? // Stores metrics for different timeframes as JSON string
  backtestResults String? // Stores backtest results if any were run as JSON string
  lastTestedAt DateTime?

  // Relations
  strategy   Strategy @relation(fields: [strategyId], references: [id], onDelete: Cascade)
  strategyId String

  @@unique([strategyId, version])
}

model Backtest {
  id        String   @id @default(cuid())
  startDate DateTime
  endDate   DateTime
  pair      String   // Trading pair (e.g., "SOL/USDC")
  timeframe String   // Timeframe (e.g., "1h", "4h", "1d")
  config    String   // JSON containing backtest parameters
  results   String   // JSON containing backtest results
  status    String   // PENDING, RUNNING, COMPLETED, FAILED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  strategy   Strategy @relation(fields: [strategyId], references: [id], onDelete: Cascade)
  strategyId String

  @@index([strategyId])
} 